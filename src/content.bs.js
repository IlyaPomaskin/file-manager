// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Path = require("path");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Lens$Rationale = require("rationale/src/Lens.js");
var Panel$ReactTemplate = require("./panel.bs.js");
var Fs_utils$ReactTemplate = require("./fs_utils.bs.js");

var component = ReasonReact.reducerComponent("Content");

function make() {
  var leftLens = Lens$Rationale.make((function (state) {
          return state[/* left */0];
        }), (function (value, state) {
          return /* record */[
                  /* left */value,
                  /* right */state[/* right */1]
                ];
        }));
  var rightLens = Lens$Rationale.make((function (state) {
          return state[/* right */1];
        }), (function (value, state) {
          return /* record */[
                  /* left */state[/* left */0],
                  /* right */value
                ];
        }));
  var makePanel = function (path, $staropt$star, _) {
    var relativePath = $staropt$star ? $staropt$star[0] : "";
    var path$1 = Path.resolve(path, relativePath);
    return /* record */[
            /* path */path$1,
            /* files */Fs_utils$ReactTemplate.getFilesList(path$1)
          ];
  };
  var handlePathInput = function (side, $$event, self) {
    return Curry._1(self[/* send */4], /* SetPath */[
                side,
                $$event.target.value
              ]);
  };
  var handlePathChange = function (side, path, self) {
    return Curry._1(self[/* send */4], /* SetPath */[
                side,
                path
              ]);
  };
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      return React.createElement("div", {
                  className: "content"
                }, React.createElement("div", {
                      className: "o-grid o-grid--no-gutter"
                    }, React.createElement("div", {
                          className: "o-grid__cell grid"
                        }, React.createElement("input", {
                              className: "path",
                              value: self[/* state */2][/* left */0][/* path */0],
                              onChange: Curry._1(self[/* handle */0], (function (param, param$1) {
                                      return handlePathInput(/* Left */0, param, param$1);
                                    }))
                            }), ReasonReact.element(/* None */0, /* None */0, Panel$ReactTemplate.make(self[/* state */2][/* left */0][/* path */0], Curry._1(self[/* handle */0], (function (param, param$1) {
                                        return handlePathChange(/* Left */0, param, param$1);
                                      })), self[/* state */2][/* left */0][/* files */1], /* array */[]))), React.createElement("div", {
                          className: "o-grid__cell grid"
                        }, React.createElement("input", {
                              className: "path",
                              value: self[/* state */2][/* right */1][/* path */0],
                              onChange: Curry._1(self[/* handle */0], (function (param, param$1) {
                                      return handlePathInput(/* Right */1, param, param$1);
                                    }))
                            }), ReasonReact.element(/* None */0, /* None */0, Panel$ReactTemplate.make(self[/* state */2][/* right */1][/* path */0], Curry._1(self[/* handle */0], (function (param, param$1) {
                                        return handlePathChange(/* Right */1, param, param$1);
                                      })), self[/* state */2][/* right */1][/* files */1], /* array */[])))));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* left */makePanel("/Users/i.pomaskin", /* None */0, /* () */0),
              /* right */makePanel("/Users/i.pomaskin", /* None */0, /* () */0)
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      var relativePath = action[1];
      var match = +(action[0] === /* Left */0);
      return /* Update */Block.__(0, [Lens$Rationale.over(match !== 0 ? leftLens : rightLens, (function (panel) {
                        return makePanel(panel[/* path */0], /* Some */[relativePath], /* () */0);
                      }), state)]);
    });
  return newrecord;
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
