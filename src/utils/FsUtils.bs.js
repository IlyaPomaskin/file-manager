// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var List = require("bs-platform/lib/js/list.js");
var Path = require("path");
var $$Array = require("bs-platform/lib/js/array.js");
var $$String = require("bs-platform/lib/js/string.js");

function make(path, name) {
  var fullPath = Path.resolve(path, name);
  var stats = Fs.statSync(fullPath);
  return /* record */[
          /* name */name,
          /* fullPath */fullPath,
          /* isFile */+stats.isFile()
        ];
}

function makeParent(path) {
  return /* record */[
          /* name */"..",
          /* fullPath */path,
          /* isFile : false */0
        ];
}

function getDirPath(oldPath, newPart) {
  return Path.normalize(oldPath + (Path.sep + newPart));
}

function sortByTypeAndName(a, b) {
  var match = a[/* isFile */2];
  var match$1 = b[/* isFile */2];
  if (match !== 0) {
    if (match$1 !== 0) {
      return $$String.compare(a[/* name */0], b[/* name */0]);
    } else {
      return 1;
    }
  } else if (match$1 !== 0) {
    return -1;
  } else {
    return $$String.compare(a[/* name */0], b[/* name */0]);
  }
}

function getFilesList(path) {
  return List.fast_sort(sortByTypeAndName, List.append(/* :: */[
                  /* record */[
                    /* name */"..",
                    /* fullPath */path,
                    /* isFile : false */0
                  ],
                  /* [] */0
                ], List.map((function (filename) {
                        return make(path, filename);
                      }), $$Array.to_list(Fs.readdirSync(path)))));
}

exports.make = make;
exports.makeParent = makeParent;
exports.getDirPath = getDirPath;
exports.sortByTypeAndName = sortByTypeAndName;
exports.getFilesList = getFilesList;
/* fs Not a pure module */
