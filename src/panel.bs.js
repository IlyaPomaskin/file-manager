// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Cn = require("re-classnames/src/Cn.bs.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponentWithRetainedProps("Panel");

function make(path, onPathChange, files, _) {
  var newrecord = component.slice();
  newrecord[/* willReceiveProps */3] = (function (self) {
      if (self[/* retainedProps */3][/* path */0] !== path) {
        Curry._1(self[/* send */4], /* SetFocus */[".."]);
      }
      return self[/* state */2];
    });
  newrecord[/* render */9] = (function (self) {
      return React.createElement("div", {
                  className: "panel"
                }, $$Array.map((function (info) {
                        var match = info[/* isFile */2];
                        return React.createElement("div", {
                                    key: info[/* name */0],
                                    className: Cn.make(/* :: */[
                                          "panel-item",
                                          /* :: */[
                                            Cn.ifBool(info[/* isFile */2], "u-color-brand-lighter"),
                                            /* :: */[
                                              Cn.ifBool(1 - info[/* isFile */2], "u-color-brand-darker"),
                                              /* :: */[
                                                Cn.ifBool(+(self[/* state */2][/* focused */0] === info[/* name */0]), "u-bg-grey"),
                                                /* [] */0
                                              ]
                                            ]
                                          ]
                                        ]),
                                    onClick: (function () {
                                        var match = info[/* isFile */2];
                                        if (match !== 0) {
                                          console.log(info);
                                          return /* () */0;
                                        } else {
                                          return Curry._1(onPathChange, info[/* name */0]);
                                        }
                                      }),
                                    onMouseOver: (function () {
                                        return Curry._1(self[/* send */4], /* SetFocus */[info[/* name */0]]);
                                      })
                                  }, match !== 0 ? "üìÑ" : "üìÅ", info[/* name */0]);
                      }), files));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* focused */".."];
    });
  newrecord[/* retainedProps */11] = /* record */[
    /* path */path,
    /* files */files
  ];
  newrecord[/* reducer */12] = (function (action, _) {
      return /* Update */Block.__(0, [/* record */[/* focused */action[0]]]);
    });
  return newrecord;
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
